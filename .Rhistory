main = "Salaries vs Performance"
)
abline(lm(mlb2021$R.Norm ~ mlb2021$Salaries.Norm), col='red')
mlb2022 = readInResults(2022)
mlb2021 = readInResults(2021)
mlb2020 = readInResults(2020)
mlb2019 = readInResults(2019)
mlb2018 = readInResults(2018)
mlb2017 = readInResults(2017)
mlb2016 = readInResults(2016)
mlb2015 = readInResults(2015)
mlb2014 = readInResults(2014)
mlb2013 = readInResults(2013)
mlb2012 = readInResults(2012)
mlb2011 = readInResults(2011)
combined_df <- data.frame()
# Add rows from df1, df2, and df3 to combined_df
combined_df <- rbind(combined_df, mlb2022)
combined_df <- rbind(combined_df, mlb2021)
combined_df <- rbind(combined_df, mlb2020)
combined_df <- rbind(combined_df, mlb2019)
combined_df <- rbind(combined_df, mlb2018)
combined_df <- rbind(combined_df, mlb2017)
combined_df <- rbind(combined_df, mlb2016)
combined_df <- rbind(combined_df, mlb2015)
combined_df <- rbind(combined_df, mlb2014)
combined_df <- rbind(combined_df, mlb2013)
combined_df <- rbind(combined_df, mlb2012)
combined_df <- rbind(combined_df, mlb2011)
# Print the combined data frame
View(combined_df)
plot(x = combined_df$Salaries.Norm, y = combined_df$R.Norm,
xlab = "Salaries (millions)",
ylab = "Performance by Total Runs",
main = "Salaries vs Performance"
)
abline(lm(combined_df$R.Norm ~ combined_df$Salaries.Norm), col='red')
model = lm(R.Norm ~ Salaries.Norm, data = combined_df)
summary(model)
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$R,
xlab = "Salaries (millions)",
ylab = "Performance by Total Runs",
main = "Salaries vs Performance"
)
abline(lm(combined_df$R ~ combined_df$Salaries), col='red')
plot(x = combined_df$Salaries, y = (combined_df$WIN. * 162),
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm((combined_df$WIN. * 162) ~ combined_df$Salaries), col='red')
model = lm((combined_df$WIN. * 162) ~ Salaries, data = combined_df)
summary(model)
plot(x = combined_df$Salaries.Norm, y = combined_df$R.Norm,
xlab = "Salaries (millions)",
ylab = "Performance by Total Runs",
main = "Salaries vs Performance"
)
abline(lm(combined_df$R.Norm ~ combined_df$Salaries.Norm), col='red')
plot(x = combined_df$Salaries, y = combined_df$R.Norm,
xlab = "Salaries (millions)",
ylab = "Performance by Total Runs",
main = "Salaries vs Performance"
)
abline(lm(combined_df$R.Norm ~ combined_df$Salaries), col='red')
plot(x = combined_df$Salaries.Norm, y = combined_df$R.Norm,
xlab = "Salaries (millions)",
ylab = "Performance by Total Runs",
main = "Salaries vs Performance"
)
abline(lm(combined_df$R.Norm ~ combined_df$Salaries.Norm), col='red')
model = lm(R.Norm ~ Salaries.Norm, data = combined_df)
summary(model)
# Less correlation as it includes factors which muddle the data
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
suppressPackageStartupMessages(library(knitr)) #makes pdfs
suppressPackageStartupMessages(library(latex2exp))
suppressPackageStartupMessages(library(ggplot2)) #makes nice plots
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(glmnet))
suppressPackageStartupMessages(library(predtools))
suppressPackageStartupMessages(library(psych))
knitr::opts_chunk$set(echo = TRUE)
# Checks if package is installed, installs if necessary, and loads package for current session
pacman::p_load(
lubridate,  # general package for handling and converting dates
parsedate,   # has function to "guess" messy dates
aweek,      # another option for converting dates to weeks, and weeks to dates
zoo,        # additional date/time functions
tidyverse,  # data management and visualization
rio)        # data import/export
lique1 = read.csv("Lique1/ligue_1_14-22.csv")
View(lique1)
dollarsToInteger <- function(amount) {
# Remove dollar sign and commas
amount <- gsub("\\$|,", "", amount)
# Convert to integer
amount <- as.integer(amount)
return(amount)
}
readInResults <- function(year) {
liqueYear = lique1 %>% filter(season == year)
liqueYear$payroll = dollarsToInteger(liqueYear$payroll)
# Normalise Salaries - convert it to a z-score
liqueYear$Salaries.Norm = (liqueYear$payroll - mean(liqueYear$payroll)) / mean(liqueYear$payroll)
liqueYear$W.Norm = (liqueYear$W - mean(liqueYear$W)) / mean(liqueYear$W)
liqueYear$Win = liqueYear$W / liqueYear$MP
liqueYear$Win.Norm = (liqueYear$W. - mean(liqueYear$W.)) / mean(liqueYear$W.)
return(liqueYear)
}
lique2022 = readInResults(2022)
lique2022
# lique1$W. = lique1$W / lique1$MP
plot(x = lique2022$relative_payroll, y = lique2022$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W ~ lique2022$relative_payroll), col='blue')
plot(x = lique2022$relative_payroll, y = lique2022$W.,
xlab = "Salaries (millions)",
ylab = "Performance by Win %",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W. ~ lique2022$relative_payroll), col='blue')
# plot(x = log(merged_df_2022$Salaries), y = merged_df_2022$W,
#    xlab = "Salaries (millions)",
#    ylab = "Performance by Total Runs",
#    main = "log(Salaries) vs Performance"
# )
# abline(lm(merged_df_2022$W ~ log(merged_df_2022$Salaries)), col='blue')
model1 = lm(W ~ Salaries, data = wnba2022)
suppressPackageStartupMessages(library(knitr)) #makes pdfs
suppressPackageStartupMessages(library(latex2exp))
suppressPackageStartupMessages(library(ggplot2)) #makes nice plots
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(glmnet))
suppressPackageStartupMessages(library(predtools))
suppressPackageStartupMessages(library(psych))
knitr::opts_chunk$set(echo = TRUE)
# Checks if package is installed, installs if necessary, and loads package for current session
pacman::p_load(
lubridate,  # general package for handling and converting dates
parsedate,   # has function to "guess" messy dates
aweek,      # another option for converting dates to weeks, and weeks to dates
zoo,        # additional date/time functions
tidyverse,  # data management and visualization
rio)        # data import/export
lique1 = read.csv("Lique1/ligue_1_14-22.csv")
View(lique1)
dollarsToInteger <- function(amount) {
# Remove dollar sign and commas
amount <- gsub("\\$|,", "", amount)
# Convert to integer
amount <- as.integer(amount)
return(amount)
}
readInResults <- function(year) {
liqueYear = lique1 %>% filter(season == year)
liqueYear$payroll = dollarsToInteger(liqueYear$payroll)
# Normalise Salaries - convert it to a z-score
liqueYear$Salaries.Norm = (liqueYear$payroll - mean(liqueYear$payroll)) / mean(liqueYear$payroll)
liqueYear$W.Norm = (liqueYear$W - mean(liqueYear$W)) / mean(liqueYear$W)
liqueYear$Win = liqueYear$W / liqueYear$MP
liqueYear$Win.Norm = (liqueYear$W. - mean(liqueYear$W.)) / mean(liqueYear$W.)
return(liqueYear)
}
lique2022 = readInResults(2022)
lique2022
# lique1$W. = lique1$W / lique1$MP
plot(x = lique2022$relative_payroll, y = lique2022$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W ~ lique2022$relative_payroll), col='blue')
plot(x = lique2022$relative_payroll, y = lique2022$W.,
xlab = "Salaries (millions)",
ylab = "Performance by Win %",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W. ~ lique2022$relative_payroll), col='blue')
model1 = lm(W ~ Salaries, data = wnba2022)
lique2022 = readInResults(2022)
lique2021 = readInResults(2021)
lique2020 = readInResults(2020)
lique2019 = readInResults(2019)
lique2018 = readInResults(2018)
lique2017 = readInResults(2017)
lique2016 = readInResults(2016)
lique2015 = readInResults(2015)
lique2014 = readInResults(2014)
combined_df <- data.frame()
# Add rows from df1, df2, and df3 to combined_df
combined_df <- rbind(combined_df, lique2022)
combined_df <- rbind(combined_df, lique2021)
combined_df <- rbind(combined_df, lique2020)
combined_df <- rbind(combined_df, lique2019)
combined_df <- rbind(combined_df, lique2018)
combined_df <- rbind(combined_df, lique2017)
combined_df <- rbind(combined_df, lique2016)
combined_df <- rbind(combined_df, lique2015)
combined_df <- rbind(combined_df, lique2014)
# Print the combined data frame
View(combined_df)
plot(x = combined_df$Salaries.Norm, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries.Norm), col='red')
model = lm(W ~ Salaries.Norm, data = combined_df)
summary(model)
plot(x = combined_df$Salaries.Norm, y = combined_df$W.Norm,
xlab = "Salaries (standardizing)",
ylab = "Performance by Win Normalised",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W.Norm ~ combined_df$Salaries.Norm), col='red')
model = lm(W.Norm ~ Salaries.Norm, data = combined_df)
summary(model)
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
plot(x = combined_df$Salaries.Norm, y = combined_df$W.,
xlab = "Salaries (millions)",
ylab = "Performance by Win %",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W. ~ combined_df$Salaries.Norm), col='red')
plot(x = combined_df$Salaries.Norm, y = combined_df$W.Norm,
xlab = "Salaries (millions)",
ylab = "Performance by Win % standardized",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W.Norm ~ combined_df$Salaries.Norm), col='red')
model = lm(W ~ Salaries.Norm, data = combined_df)
summary(model)
model = lm(W.Norm ~ Salaries.Norm, data = combined_df)
summary(model)
combined_df$Salaries = combined_df$payroll / 1000000
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Win"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
summary(model)
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
summary(model)
suppressPackageStartupMessages(library(knitr)) #makes pdfs
suppressPackageStartupMessages(library(latex2exp))
suppressPackageStartupMessages(library(ggplot2)) #makes nice plots
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(glmnet))
suppressPackageStartupMessages(library(predtools))
suppressPackageStartupMessages(library(psych))
knitr::opts_chunk$set(echo = TRUE)
# Checks if package is installed, installs if necessary, and loads package for current session
pacman::p_load(
lubridate,  # general package for handling and converting dates
parsedate,   # has function to "guess" messy dates
aweek,      # another option for converting dates to weeks, and weeks to dates
zoo,        # additional date/time functions
tidyverse,  # data management and visualization
rio)        # data import/export
lique1 = read.csv("Lique1/serie_a_15-22.csv")
lique1 = read.csv("SerieA/serie_a_15-22.csv")
View(lique1)
dollarsToInteger <- function(amount) {
# Remove dollar sign and commas
amount <- gsub("\\$|,", "", amount)
# Convert to integer
amount <- as.integer(amount)
return(amount)
}
readInResults <- function(year) {
liqueYear = lique1 %>% filter(season == year)
liqueYear$payroll = dollarsToInteger(liqueYear$payroll)
# Normalise Salaries - convert it to a z-score
liqueYear$Salaries.Norm = (liqueYear$payroll - mean(liqueYear$payroll)) / mean(liqueYear$payroll)
liqueYear$W.Norm = (liqueYear$W - mean(liqueYear$W)) / mean(liqueYear$W)
liqueYear$Win = liqueYear$W / liqueYear$MP
liqueYear$Win.Norm = (liqueYear$W. - mean(liqueYear$W.)) / mean(liqueYear$W.)
return(liqueYear)
}
lique2022 = readInResults(2022)
lique2022
# lique1$W. = lique1$W / lique1$MP
plot(x = lique2022$relative_payroll, y = lique2022$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W ~ lique2022$relative_payroll), col='blue')
plot(x = lique2022$relative_payroll, y = lique2022$W.,
xlab = "Salaries (millions)",
ylab = "Performance by Win %",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W. ~ lique2022$relative_payroll), col='blue')
model1 = lm(W ~ Salaries, data = wnba2022)
model1 = lm(W ~ Salaries, data = lique2022)
lique2022 = readInResults(2022)
lique2021 = readInResults(2021)
lique2020 = readInResults(2020)
lique2019 = readInResults(2019)
lique2018 = readInResults(2018)
lique2017 = readInResults(2017)
lique2016 = readInResults(2016)
lique2015 = readInResults(2015)
lique2014 = readInResults(2014)
combined_df <- data.frame()
# Add rows from df1, df2, and df3 to combined_df
combined_df <- rbind(combined_df, lique2022)
combined_df <- rbind(combined_df, lique2021)
combined_df <- rbind(combined_df, lique2020)
combined_df <- rbind(combined_df, lique2019)
combined_df <- rbind(combined_df, lique2018)
combined_df <- rbind(combined_df, lique2017)
combined_df <- rbind(combined_df, lique2016)
combined_df <- rbind(combined_df, lique2015)
combined_df <- rbind(combined_df, lique2014)
# Print the combined data frame
View(combined_df)
plot(x = combined_df$Salaries.Norm, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries.Norm), col='red')
model = lm(W ~ Salaries.Norm, data = combined_df)
summary(model)
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
# must exclude covid year for this to work
plot(x = combined_df$payroll, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$payroll), col='red')
model = lm(W ~ payroll, data = combined_df)
summary(model)
combined_df$Salaries = combined_df$payroll / 1000000
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
summary(model)
suppressPackageStartupMessages(library(knitr)) #makes pdfs
suppressPackageStartupMessages(library(latex2exp))
suppressPackageStartupMessages(library(ggplot2)) #makes nice plots
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(glmnet))
suppressPackageStartupMessages(library(predtools))
suppressPackageStartupMessages(library(psych))
knitr::opts_chunk$set(echo = TRUE)
# Checks if package is installed, installs if necessary, and loads package for current session
pacman::p_load(
lubridate,  # general package for handling and converting dates
parsedate,   # has function to "guess" messy dates
aweek,      # another option for converting dates to weeks, and weeks to dates
zoo,        # additional date/time functions
tidyverse,  # data management and visualization
rio)        # data import/export
lique1 = read.csv("Lique1/ligue_1_14-22.csv")
View(lique1)
dollarsToInteger <- function(amount) {
# Remove dollar sign and commas
amount <- gsub("\\$|,", "", amount)
# Convert to integer
amount <- as.integer(amount)
return(amount)
}
readInResults <- function(year) {
liqueYear = lique1 %>% filter(season == year)
liqueYear$payroll = dollarsToInteger(liqueYear$payroll)
# Normalise Salaries - convert it to a z-score
liqueYear$Salaries.Norm = (liqueYear$payroll - mean(liqueYear$payroll)) / mean(liqueYear$payroll)
liqueYear$W.Norm = (liqueYear$W - mean(liqueYear$W)) / mean(liqueYear$W)
liqueYear$Win = liqueYear$W / liqueYear$MP
liqueYear$Win.Norm = (liqueYear$W. - mean(liqueYear$W.)) / mean(liqueYear$W.)
return(liqueYear)
}
lique2022 = readInResults(2022)
lique2022
# lique1$W. = lique1$W / lique1$MP
plot(x = lique2022$relative_payroll, y = lique2022$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W ~ lique2022$relative_payroll), col='blue')
plot(x = lique2022$relative_payroll, y = lique2022$W.,
xlab = "Salaries (millions)",
ylab = "Performance by Win %",
main = "Salaries vs Performance"
)
abline(lm(lique2022$W. ~ lique2022$relative_payroll), col='blue')
# plot(x = log(merged_df_2022$Salaries), y = merged_df_2022$W,
#    xlab = "Salaries (millions)",
#    ylab = "Performance by Total Runs",
#    main = "log(Salaries) vs Performance"
# )
# abline(lm(merged_df_2022$W ~ log(merged_df_2022$Salaries)), col='blue')
model1 = lm(W ~ Salaries, data = wnba2022)
plot(x = combined_df$Salaries.Norm, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries.Norm), col='red')
model = lm(W ~ Salaries.Norm, data = combined_df)
summary(model)
# must exclude covid year for this to work
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (millions)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
plot(x = combined_df$Salaries.Norm, y = combined_df$W.Norm,
xlab = "Salaries (standardizing)",
ylab = "Performance by Win Normalised",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W.Norm ~ combined_df$Salaries.Norm), col='red')
model = lm(W.Norm ~ Salaries.Norm, data = combined_df)
summary(model)
plot(x = combined_df$Salaries.Norm, y = combined_df$W.,
xlab = "Salaries (millions)",
ylab = "Performance by Win %",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W. ~ combined_df$Salaries.Norm), col='red')
plot(x = combined_df$Salaries.Norm, y = combined_df$W.Norm,
xlab = "Salaries (millions)",
ylab = "Performance by Win % standardized",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W.Norm ~ combined_df$Salaries.Norm), col='red')
model = lm(W ~ Salaries.Norm, data = combined_df)
summary(model)
model = lm(W.Norm ~ Salaries.Norm, data = combined_df)
summary(model)
combined_df$WIN.Norm = (combined_df$W.L. - mean(combined_df$W.L.)) / mean(combined_df$W.L.)
combined_df$Salaries = combined_df$payroll / 1000000
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Win"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
summary(model)
plot(x = combined_df$Salaries, y = combined_df$W,
xlab = "Salaries (standardized)",
ylab = "Performance by Wins",
main = "Salaries vs Performance"
)
abline(lm(combined_df$W ~ combined_df$Salaries), col='red')
model = lm(W ~ Salaries, data = combined_df)
summary(model)
